version: '2'

volumes:
  orderer.log-network:
  peer0.org1.log-network:

networks:
  byfn:

services:

    # There should be either 3, 5 or 7 zookeepers to avoid split-brain scenarios, and larger than 1 to avoid a single point of failure
  #zookeeper0:
  #  container_name: zookeeper0
  #  image: hyperledger/fabric-zookeeper
  #  environment:
  #       - ZOO_MY_ID=1
  #       - ZOO_SERVERS=server.1=zookeeper0:2888:3888 server.2=zookeeper1:2888:3888 server.3=zookeeper2:2888:3888
  #  ports:
  #       - 2181
  #       - 2888
  #       - 3888
  #  networks:
  #       - byfn

  # There should be at least 3 nodes in the kafka cluster for fault tollerance
  #kafka0:
  #      image: hyperledger/fabric-kafka
  #      container_name: kafka0
  #      environment:
  #          - KAFKA_LOG_RETENTION_MS=-1
  #          - KAFKA_MESSAGE_MAX_BYTES=103809024
  #          - KAFKA_REPLICA_FETCH_MAX_BYTES=103809024
  #          - KAFKA_BROKER_ID=0
  #          - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
  #          - KAFKA_UNCLEAN_LEADER_ELECTION_ENABLE=false
  #          - KAFKA_DEFAULT_REPLICATION_FACTOR=3
  #          - KAFKA_MIN_INSYNC_REPLICAS=2
  #          - KAFKA_ZOOKEEPER_CONNECT=zookeeper0:2181,zookeeper1:2181,zookeeper2:2181
  #      ports:
  #          - 9092
  #      depends_on:
  #          - zookeeper0
  #          - zookeeper1
  #          - zookeeper2
  #      links:
  #          - zookeeper0:zookeeper0
  #          - zookeeper1:zookeeper1
  #          - zookeeper2:zookeeper2
  #      networks:
  #          - byfn

  ca0:
    image: hyperledger/fabric-ca
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca-org1
    ports:
      - "7054:7054"
    command: sh -c 'fabric-ca-server start --ca.certfile /etc/hyperledger/fabric-ca-server-config/ca.org1.log-network-cert.pem --ca.keyfile /etc/hyperledger/fabric-ca-server-config/af538327a27ed568f7ef2c4ccc1d4db7de6543272f193a1c883b4d38b8bc6ffe_sk -b admin:adminpw -d'
    volumes:
      - ./crypto-config/peerOrganizations/org1.log-network/ca/:/etc/hyperledger/fabric-ca-server-config
    extra_hosts:
      - "peer1.org1.log-network:192.168.211.22"
    container_name: ca_peerOrg1
    networks:
      - byfn

  orderer.log-network:
    extends:
      file:   base1/docker-compose-base.yaml
      service: orderer.log-network
    container_name: orderer.log-network
    networks:
      - byfn

  peer0.org1.log-network:
    container_name: peer0.org1.log-network
    extends:
      file:  base1/docker-compose-base.yaml
      service: peer0.org1.log-network
    networks:
      - byfn

  couchdb0:
    container_name: couchdb0
    image: hyperledger/fabric-couchdb
    # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
    # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
    environment:
      - COUCHDB_USER=
      - COUCHDB_PASSWORD=
    # Comment/Uncomment the port mapping if you want to hide/expose the CouchDB service,
    # for example map it to utilize Fauxton User Interface in dev environments.
    ports:
      - "5984:5984"
    networks:
      - byfn

  cli:
    container_name: cli
    image: hyperledger/fabric-tools:latest
    tty: true
    stdin_open: true
    environment:
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_LOGGING_LEVEL=DEBUG
      #- CORE_LOGGING_LEVEL=INFO
      - CORE_PEER_ID=cli
      - CORE_PEER_ADDRESS=peer0.org1.log-network:7051
      - CORE_PEER_LOCALMSPID=Org1MSP
      - CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.log-network/users/Admin@org1.log-network/msp
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: /bin/bash
    volumes:
        - /var/run/:/host/var/run/
        - ./../chaincode/:/opt/gopath/src/github.com/chaincode
        - ./crypto-config:/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/
        - ./scripts:/opt/gopath/src/github.com/hyperledger/fabric/peer/scripts/
        - ./channel-artifacts:/opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts
    depends_on:
      - orderer.log-network
      - peer0.org1.log-network
    networks:
      - byfn
